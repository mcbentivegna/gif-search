{"version":3,"sources":["Components/SearchForm.js","Components/Gif.js","Components/NoGifs.js","Components/GifList.js","App.js","index.js"],"names":["SearchForm","state","searchText","onSearchChange","e","setState","target","value","handleSubmit","preventDefault","props","onSearch","query","currentTarget","reset","className","onSubmit","this","htmlFor","type","onChange","name","ref","input","placeholder","id","Component","Gif","src","url","NoGifs","GifList","gifs","results","data","length","map","gif","images","fixed_height","key","App","performSearch","axios","get","then","response","loading","catch","err","console","log","ReactDOM","render","document","getElementById"],"mappings":"gPAEqBA,G,kNAEnBC,MAAQ,CACNC,WAAY,I,EAKdC,eAAiB,SAAAC,GACf,EAAKC,SAAS,CAAEH,WAAYE,EAAEE,OAAOC,S,EAGvCC,aAAe,SAAAJ,GACbA,EAAEK,iBACF,EAAKC,MAAMC,SAAS,EAAKC,MAAML,OAC/BH,EAAES,cAAcC,S,uDAGR,IAAD,OAEP,OACE,0BAAMC,UAAU,cAAcC,SAAUC,KAAKT,cAC3C,2BAAOO,UAAU,YAAYG,QAAQ,UAArC,UACA,2BAAOC,KAAK,SACLC,SAAUH,KAAKd,eACfkB,KAAK,SACLC,IAAK,SAACC,GAAD,OAAW,EAAKX,MAAQW,GAC7BC,YAAY,cACnB,4BAAQL,KAAK,SAASM,GAAG,SAASV,UAAU,iBAAgB,uBAAGA,UAAU,6BAAb,gB,GA5B5BW,cCMzBC,EANH,SAAAjB,GAAK,OACf,wBAAIK,UAAU,YACZ,yBAAKa,IAAKlB,EAAMmB,QCKLC,EAPA,SAAApB,GAAK,OAClB,wBAAIK,UAAU,WACZ,uBAAGA,UAAU,2BAAb,+BACA,mECiBWgB,EAjBC,SAAArB,GACd,IACIsB,EADEC,EAAUvB,EAAMwB,KAStB,OANEF,EADEC,EAAQE,OAAQ,EACXF,EAAQG,KAAK,SAAAC,GAAG,OAAI,kBAAC,EAAD,CAAKR,IAAKQ,EAAIC,OAAOC,aAAaV,IAAKW,IAAKH,EAAIZ,QAGpE,kBAAC,EAAD,MAIP,wBAAIV,UAAU,YACXiB,I,iBCXcS,E,kDAEnB,aAAe,IAAD,8BACZ,gBAiCFC,cAAgB,WAAoB,IAAnB9B,EAAkB,uDAAV,OACvB+B,IAAMC,IAAN,yFAA4FhC,IAC3FiC,MAAK,SAAAC,GAAc,EAAKzC,SAAU,CAAC2B,KAAMc,EAASZ,KAAKA,KAAMa,SAAQ,OACrEC,OAAO,SAAAC,GAAG,OAAIC,QAAQC,IAAR,0CAA+CF,QAnC9D,EAAKhD,MAAQ,CACX+B,KAAM,GACNe,SAAS,GAJC,E,gEA+BZ9B,KAAKyB,kB,+BAUL,OACE,6BACE,yBAAK3B,UAAU,eACb,yBAAKA,UAAU,SACb,wBAAIA,UAAU,cAAd,aACA,kBAAC,EAAD,CAAYJ,SAAUM,KAAKyB,kBAG/B,yBAAK3B,UAAU,gBACVE,KAAKhB,MAAM8C,QACV,yCACA,kBAAC,EAAD,CAASb,KAAMjB,KAAKhB,MAAM+B,a,GAtDPN,aCFjC0B,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,W","file":"static/js/main.a986d5c2.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nexport default class SearchForm extends Component {\n\n  state = {\n    searchText: '',\n  };\n  \n  //searchInput = React.createRef;\n\n  onSearchChange = e => {\n    this.setState({ searchText: e.target.value });\n  }\n  \n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.onSearch(this.query.value)\n    e.currentTarget.reset();\n  }\n  \n  render() {  \n    //console.log(this.searchInput)\n    return (\n      <form className=\"search-form\" onSubmit={this.handleSubmit} >\n        <label className=\"is-hidden\" htmlFor=\"search\">Search</label>\n        <input type=\"search\" \n               onChange={this.onSearchChange}\n               name=\"search\" \n               ref={(input) => this.query = input}\n               placeholder=\"Search...\" />\n        <button type=\"submit\" id=\"submit\" className=\"search-button\"><i className=\"material-icons icn-search\">search</i></button>\n      </form>      \n    );\n  }\n}","import React from 'react';\n\nconst Gif = props => (\n  <li className=\"gif-wrap\">\n    <img src={props.url}/>\n  </li>\n);\n\nexport default Gif;","import React from 'react';\n\nconst NoGifs = props => (\n  <li className='no-gifs'>\n    <i className=\"material-icons icon-gif\">sentiment_very_dissatisfied</i>\n    <h3>Sorry, no GIFs match your search.</h3>\n  </li>\n);\n\nexport default NoGifs;","import React from 'react';\nimport Gif from './Gif';\nimport NoGifs from './NoGifs';\n\n\nconst GifList = props => { \n  const results = props.data;\n  let gifs;\n  if (results.length >0) {\n    gifs = results.map( gif => <Gif url={gif.images.fixed_height.url} key={gif.id}/>);\n  }\n  else {\n    gifs = <NoGifs />;\n  }\n\n  return(\n    <ul className=\"gif-list\">\n      {gifs}      \n    </ul> \n  );\n};\n\nexport default GifList;\n","import React, { Component } from 'react';\nimport './App.css';\nimport SearchForm from './Components/SearchForm';\nimport GifList from './Components/GifList';\nimport axios from 'axios';\n\nexport default class App extends Component {\n  \n  constructor() {\n    super();\n    this.state = {\n      gifs: [],\n      loading: true\n    };\n  } \n\n  //just using Fetch, later in couse we learned to use Axios.\n  /*\n  componentDidMount(){\n    //maybe key should be ptSdPjgk5VXaPUxi6mvkz941ORbIgUzj ??\n    fetch('http://api.giphy.com/v1/gifs/trending?api_key=dc6zaTOxFJmzC')\n      .then(response => response.json())\n      .then(responseData => {\n        this.setState( {gifs: responseData.data })\n        .catch(err => console.log(`Error fetching and parsing data ${err}`));\n      }) \n  }\n  */\n\n  /*componentDidMount() {\n    axios.get('http://api.giphy.com/v1/gifs/trending?api_key=dc6zaTOxFJmzC')\n    .then(response => {\n  //we can skip conversion to JSON, axios does this automatically. We have to write data.data, because axios stores the response data in a data object, and because giphy also stores the data in a data object.\n      this.setState( {gifs: response.data.data});\n    })\n    .catch( err => console.log(`Error fetching and parsing data ${err}`));\n  }*/\n\n  componentDidMount() {\n    this.performSearch();\n  }\n\n  performSearch = (query = 'cats') =>{\n    axios.get(`https://api.giphy.com/v1/gifs/search?api_key=dc6zaTOxFJmzC&limit=12&rating=g&q=${query}`)\n    .then(response => { this.setState( {gifs: response.data.data, loading:false});})\n    .catch( err => console.log(`Error fetching and parsing data ${err}`));\n  }\n\n  render() {\n    return (\n      <div>\n        <div className=\"main-header\">\n          <div className=\"inner\">\n            <h1 className=\"main-title\">GifSearch</h1>\n            <SearchForm onSearch={this.performSearch}/>      \n          </div>   \n        </div>    \n        <div className=\"main-content\">{\n            (this.state.loading)\n            ? <p>Loading...</p>\n            : <GifList data={this.state.gifs} />\n        }\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}